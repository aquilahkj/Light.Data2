<#@ template debug="true" hostspecific="true" language="C#"  #>
<#@ output extension=".json" #>
<#@ assembly name="System.Core"#>
<#@ assembly name="System.Data"#>
<#@ assembly name="System.Xml"#>
<#@ assembly name="$(SolutionDir)/lib/Light.Data.Template.dll"  #>
<#@ import namespace="System"#>
<#@ import namespace="System.Data"#>
<#@ import namespace="System.Collections.Generic"#>
<#@ import namespace="System.Diagnostics" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Data.SqlClient"#>
<#@ import namespace="System.Text"#>
<#@ import namespace="System.Text.RegularExpressions"#>
<#@ import namespace="Light.Data.Template"#>
<# 
	//设置命名空间
    var namespaceName="Light.Data.Mssql.Test";
	//设置数据库连接
    var connection="Data Source=192.168.210.130;User ID=sa;Password=qwerty;Initial Catalog=LightData_Test;";
	//设置需要生成的数据库
    var dataBase="LightData_Test";

	DbSetting.Initial();
	DbSetting.SetDefaultValueStringMode(true);
	//设置需要生成的数据表
    DbSetting.SetTable("Te_BaseField_Config");
	DbSetting.SetTable("Te_BaseField_Config_Replace");
	//DbSetting.SetTable("Te_RelateMain_Config");
	//DbSetting.SetTable("Te_RelateSub_Config");
	DbSetting.SetTable("Te_BaseField_Config","MyConfig1");
	DbSetting.SetReadControl("MyConfig1.Int32_FieldNull");
	DbSetting.SetDefaultValue("MyConfig1.Now_Field", "DefaultTime.TimeStamp");
	DbSetting.SetDefaultValue("MyConfig1.Decimal_FieldNull","20.5");
	DbSetting.SetDefaultValue("MyConfig1.DateTime_Field","2017-01-02 12:00:00");
	DbSetting.SetDefaultValue("MyConfig1.DateTime_FieldNull","2017-01-02 12:00:00");
	DbSetting.SetDefaultValue("MyConfig1.Varchar_FieldNull","testtest");
	DbSetting.SetDefaultValue("MyConfig1.EnumInt32_FieldNull","EnumInt32Type.Positive1");

	//设置需要生成的数据表,数据类型继承DataTableEntity
	//DbSetting.SetEntityTable("Te_BaseField_Entity");

	//设置字段的转换类型,设置"表名.字段名"指定表字段转换,设置"*.字段名"所有表符合字段名的都转换
    //DbSetting.SetSpecifiedType("*.EnumInt32Field","EnumInt32Type");

	//设置字段非空,设置"表名.字段名"指定表字段非空,设置"*.字段名"所有表符合字段名的都非空,设置"表名.*"指定表所有字段非空
	//DbSetting.SetNotNullField("Te_BaseField_NullMiniValue.*");

	//设置字段默认值,设置"表名.字段名"指定表字段使用默认值,设置"*.字段名"所有表符合字段名的都使用默认值
	DbSetting.SetDefaultValue("*.Now_FieldNull","DefaultTime.Now");
	DbSetting.SetDefaultValue("*.Today_FieldNull","DefaultTime.Today");
	DbSetting.SetDefaultValue("*.Now_Field","DefaultTime.Now");
	DbSetting.SetDefaultValue("*.Today_Field","DefaultTime.Today");

	DbSetting.SetDefaultValue("Te_BaseField_Config.Int32_FieldNull","20");
	DbSetting.SetDefaultValue("Te_BaseField_Config.Decimal_FieldNull","20.5");
	DbSetting.SetDefaultValue("Te_BaseField_Config.DateTime_Field","2017-01-02 12:00:00");
	DbSetting.SetDefaultValue("Te_BaseField_Config.DateTime_FieldNull","2017-01-02 12:00:00");
	DbSetting.SetDefaultValue("Te_BaseField_Config.Varchar_FieldNull","testtest");
	DbSetting.SetDefaultValue("Te_BaseField_Config.EnumInt32_FieldNull","EnumInt32Type.Positive1");

	DbSetting.SetDefaultValue("Te_BaseField_Config_Replace.Int32_FieldNull","30");
	DbSetting.SetDefaultValue("Te_BaseField_Config_Replace.Decimal_FieldNull","30.5");
	DbSetting.SetDefaultValue("Te_BaseField_Config_Replace.DateTime_Field","2017-01-03 12:00:00");
	DbSetting.SetDefaultValue("Te_BaseField_Config_Replace.DateTime_FieldNull","2017-01-03 12:00:00");
	DbSetting.SetDefaultValue("Te_BaseField_Config_Replace.Varchar_FieldNull","testtest2");
	DbSetting.SetDefaultValue("Te_BaseField_Config_Replace.EnumInt32_FieldNull","EnumInt32Type.Positive2");

	var dbSchema= new MssqlSchema(dataBase, connection);
    var tableList=dbSchema.GetTables();
#>
{
	"lightDataMapper": {
		"dataTypes": [
<#
	int j=0;
    foreach(Table table in tableList)
    {
		j++;
		string tableName=table.TableName;
#>
			{
				"type": "<#=namespaceName#>.<#=StringUtil.ToPascalCase(tableName)#>,<#=namespaceName#>",
				"tableName": "<#=table.RawName#>",
				"isEntityTable": true,
				"dataFields": [
<#
		int i=0;
		var columns=table.GetColumns();
        foreach(Column c in columns)
        {
			i++;
#>
					{
						"fieldName": "<#=StringUtil.ToPascalCase(c.FieldName)#>",
<# if (c.AllowNull) { #>
						"isNullable": true,
<# } #>
<# if (c.IsPrimaryKey) { #>
						"isPrimaryKey": true, 
<# } #>
<# if (c.IsIdentity) { #>
						"isIdentity": true, 
<# } #>
<# if (c.DBType!=null) { #>
						"dbType": "<#=c.DBType#>",
<# } #>
<# if (c.DefaultValue!=null) { #>
						"defaultValue": <#=c.DefaultValue#>,
<# } #>
<# if (c.Control!=null) { #>
						"functionControl": "<#=c.Control#>",
<# } #>
						"name": "<#=c.ColumnName#>"
					}<# if (i<columns.Length) { #>,
<# } #>
<#
        }
#>

				]
			}<# if (j<tableList.Count) { #>,
<# } #>
<#
    }
#>

		]
	}
}